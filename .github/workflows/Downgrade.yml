name: CompatDowngrade
on:
  push:
    paths:
      - 'Project.toml'
  schedule:
    - cron: 0 0 * * 1
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  downgrade:
    name: Downgrade ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental || false }}
    timeout-minutes: 60
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1.12'
        os:
          - ubuntu-latest
        arch:
          - x64
        include:
          - version: '1.12'
            experimental: true
    env:
      RESOLVER_PATH: "/tmp/resolver"
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - name: Setup Resolver.jl
        run: |
          if [ ! -d "${RESOLVER_PATH}" ]; then
            git clone https://github.com/StefanKarpinski/Resolver.jl.git "${RESOLVER_PATH}"
            julia --project="${RESOLVER_PATH}/bin" -e 'using Pkg; Pkg.instantiate()'
          fi
      - name: Run resolver.jl
        run: |
          julia --project="${RESOLVER_PATH}/bin" ${RESOLVER_PATH}/bin/resolve.jl . --min-minor=@deps --julia=${{ matrix.version }}
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          coverage: false
          allow_reresolve: false
          force_latest_compatible_version: false
